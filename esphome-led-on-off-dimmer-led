#Firmware ESPHome version 2022.8.0 compiled on Sep 30 2022, 12:11:53
#Gestione di un solo canale per mosfet led con controllo on/off alimentazione
#Funzione on click ON/OFF on presso fade UP fade DOWN
esphome:
 name: test

esp8266:
  board: nodemcuv2

# Enable logging
logger:
  level: debug
# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

ota:
  password: "xxxxxxxxxxxxxxxxxxxxx"

wifi:
  ssid: "xxxxxxxxxxx-xxxxxxxxxxxxx"
  password: "xxxxxxxxxxxxxx"

  # Optional manual IP
  #manual_ip:
  #  static_ip: 192.168.1.100
  #  gateway: 192.168.1.254
  #  subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test Fallback Hotspot"
    password: "avp9cOXV6PeZ"

captive_portal:

status_led:
  pin: D4
  
globals:
  - id: my_global_bool
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: my_global_float
    type: float
    restore_value: no
    initial_value: '0.3'
    
switch:
# This is to restart the ESPHome device remotely
  - platform: restart
    name: "Restart ESPHome - Kuchyna_Dimmer"

sensor:
  - platform: wifi_signal
    name: "WiFi - Kuchyna_Dimmer"
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin:
      number: D6
      mode: INPUT_PULLUP
      inverted: True
    name: "Pulsante dimmer 1"
    id: led_touch
    filters:
      - delayed_on: 100ms  
      - delayed_off: 100ms 

    on_click:
      then:
        - if:
            condition:
              light.is_off: led_centrale
            then:
              - light.turn_on: 
                 id: led_centrale
                 brightness: 1.0
                 transition_length: 1.5s
              - lambda: |-
                 id(my_global_bool) = (true);
                 ESP_LOGD("main", "Global value brightness is: %f", id(my_global_float));
            else:
              light.turn_off: led_centrale
      
    on_press:
      then:
      - if:
          condition: 
              lambda: |-
               return id(my_global_bool);
              #Quando la condizione sopra viene valutata come vera funzione Fade_up altrimenti Fade_down
          then:
          - delay: 0.5s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: led_touch
                  - lambda: |-
                      return {id(led_centrale).current_values.get_brightness() < 1.0};
                   #imposto il valore max in modo che il pulsante consenta il 100%
              then:
                - light.dim_relative:
                    id: led_centrale
                    relative_brightness: 2%
                    transition_length: 0.1s
                - delay: 0.1s
                - lambda: |-
                    id(my_global_float) = id(led_centrale).current_values.get_brightness();
                    ESP_LOGD("main", "Global value is: %f", id(my_global_float));
          - lambda: |-
              id(my_global_bool) = (false);
          - script.execute: my_script_fade

          else:
          - delay: 0.5s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: led_touch
                  - lambda: |-
                      return {id(led_centrale).current_values.get_brightness() > 0.20};
                  #imposto il valore minimo in modo che il pulsante consenta solo il 20% minimo
              then:
                - light.dim_relative:
                    id: led_centrale
                    relative_brightness: -2%
                    transition_length: 0.1s
                - delay: 0.1s
                - lambda: |-
                    id(my_global_float) = id(led_centrale).current_values.get_brightness();
                    ESP_LOGD("main", "Global value brightness is: %f", id(my_global_float));
          - lambda: |-
              id(my_global_bool) = (true);
          - script.execute: my_script_fade
          #lo script imposta e il valore interno del pulsante su off per consentire nuovamente l'ingresso nella logica fade

# Example configuration entry
output:
  - platform: esp8266_pwm
    pin: D1
    frequency: 1000 Hz
    id: pwm_output_1
    power_supply: power_supply1
    
power_supply:
  - id: 'power_supply1'
    pin: D5

# Example usage in a light
light:
  - platform: monochromatic
    output: pwm_output_1
    name: "Led centrale ingresso living"
    id: led_centrale

script:
  - id: my_script_fade
    then:    
     - lambda: |-
        id(led_touch).publish_state(false);
